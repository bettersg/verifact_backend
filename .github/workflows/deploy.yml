name: Deploy
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Load Pipenv cache
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install -d

      - name: Output requirements.txt for gcloud deploy
        run: pipenv lock -r > requirements.txt

      - name: Collect Django static assets
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          CLIENT_ORIGIN: ${{ secrets.CLIENT_ORIGIN }}
          CLIENT_HOST: ${{ secrets.CLIENT_HOST }}
        run: pipenv run python manage.py collectstatic

      - name: Inject app.yml environment variables for gcloud App Engine deployment
        uses: ikuanyshbekov/app-yaml-env-compiler@v1.0
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          CLIENT_ORIGIN: ${{ secrets.CLIENT_ORIGIN }}
          CLIENT_HOST: ${{ secrets.CLIENT_HOST }}

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to App Engine
        run: gcloud app deploy --quiet
